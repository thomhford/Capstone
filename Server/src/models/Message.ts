// models/Message.ts
import { DataTypes, Model, Sequelize } from 'sequelize';
import {FileInstance} from "./File";
import {UserInstance} from "./User";

interface MessageAttributes {
    id?: number; // Optional because it's auto-generated by MySQL
    senderId: string;
    receiverId: string;
    message: string;
    isRead: boolean;
    isReceived: boolean;
    type: string;
}

export interface MessageInstance extends Model<MessageAttributes>, MessageAttributes {
    // Instance methods for testing associations
    getSender: () => Promise<UserInstance>;
    getReceiver: () => Promise<UserInstance>;
    getAttachment: () => Promise<FileInstance>;
}

export const createMessageModel = (sequelize: Sequelize) => sequelize.define<MessageInstance>('Message', {
    id: {
        type: DataTypes.INTEGER,
        autoIncrement: true,
        primaryKey: true,
        allowNull: false
    },
    senderId: {
        type: DataTypes.STRING,
        allowNull: false,
    },
    receiverId: {
        type: DataTypes.STRING,
        allowNull: false,
    },
    message: {
        type: DataTypes.TEXT,
        allowNull: false,
    },
    isRead: {
        type: DataTypes.BOOLEAN,
        allowNull: false,
        defaultValue: false,
    },
    isReceived: {
        type: DataTypes.BOOLEAN,
        allowNull: false,
        defaultValue: false,
    },
    type: {
        type: DataTypes.STRING,
        allowNull: false,
        defaultValue: 'text', // 'text', 'image', 'file', etc.
    },
}, {
    timestamps: true,
    paranoid: true,
});
